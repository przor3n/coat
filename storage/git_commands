git clone
git add
git rm
git add -p
git add -A
git fetch --all --prune
git fetch --all --prune --tags
git fetch --all --prune --verbose
git fetch --all --prune --tags --verbose
git reset HEAD
git reset --hard && git clean -dfx
git clean -fd
git merge
git mv
git
git
git status
git status -s
git submodule update --init --recursive
git pull
git pull upstream master
git pull --rebase
git pull && git push
git fetch && git rebase
git push
git push origin
git push --set-upstream
git push --set-upstream origin
git push --set-upstream origin $(git symbolic-ref --short HEAD)
git push origin master
git remote
git remote -v
git remote add
git diff
git diff --staged
git diff -w "$@" | vim -R -
git commit -v
git commit -v -a
git commit -v -m
git commit -v -am"
git commit --interactive
git branch
git branch -a
git branch --track
git branch -m
git branch -d
git branch -D
git shortlog -sn
git cherry-pick
git cherry-pick -x
git checkout
git checkout master
git checkout -b
git checkout -b
git checkout --track
git checkout master; git pull; git branch -D
git archive --format zip --output
git branch -D
git fetch origin -v; git fetch upstream -v; git merge upstream/master
git log --graph --pretty=oneline --abbrev-commit
git log --graph --pretty=format:'%C(bold)%h%Creset%C(magenta)%d%Creset %s %C(yellow)<%an> %C(cyan)(%cr)%Creset' --abbrev-commit --date=relative"
gg --stat
git shortlog -sn
git whatchanged
git tag
git tag -a
git tag -d
git tag -l
git format-patch -1

git gui
git commit -S -am
git stash
git stash branch
git stash drop
git stash list
git stash pop

echo "Show ignored files"; git ls-files . --ignored --exclude-standard --others
echo "show untracked files"; git ls-files . --exclude-standard --others
echo "Show commits since last pull"; git log HEAD@{1}..HEAD@{0}
echo "Add uncommitted and unstaged changes to the last commit"; git commit -a --amend -C HEAD
